name: shs Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            This release has the following changes:
            - Release flow.
          draft: false
          prerelease: false

      - name: Fix Upload URL
        id: upload_url
        run: echo ::set-output name=upload_url::${${{ steps.create_release.outputs.upload_url }}/{?name,label}/}

      - name: Echo upload url
        run: echo "${{ steps.upload_url.outputs.upload_url }}"

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.15'

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build Assets
        run: |
          #echo "Darwin arm64"
          #env GOOS=darwin GOARCH=arm64 go build -o build/shs-${{ steps.get_version.outputs.VERSION }}-darwin-arm64 github.com/devops-kung-fu/shs
          echo "Darwin amd64"
          env GOOS=darwin GOARCH=amd64 go build -o build/shs-${{ steps.get_version.outputs.VERSION }}-darwin-amd64 github.com/devops-kung-fu/shs
          
          echo "FreeBSD amd64"
          env GOOS=freebsd GOARCH=amd64 go build -o build/shs-${{ steps.get_version.outputs.VERSION }}-freebsd-amd64 github.com/devops-kung-fu/shs
          echo "FreeBSD arm"
          env GOOS=freebsd GOARCH=arm go build -o build/shs-${{ steps.get_version.outputs.VERSION }}-freebsd-arm github.com/devops-kung-fu/shs
          
          echo "Linux amd64"
          env GOOS=linux GOARCH=amd64 go build -o build/shs-${{ steps.get_version.outputs.VERSION }}-linux-amd64 github.com/devops-kung-fu/shs
          echo "Linux arm64"
          env GOOS=linux GOARCH=arm64 go build -o build/shs-${{ steps.get_version.outputs.VERSION }}-linux-arm64 github.com/devops-kung-fu/shs
          
          echo "NetBSD amd64"
          env GOOS=netbsd GOARCH=amd64 go build -o build/shs-${{ steps.get_version.outputs.VERSION }}-netbsd-amd64 github.com/devops-kung-fu/shs
          echo "NetBSD arm"
          env GOOS=netbsd GOARCH=arm go build -o build/shs-${{ steps.get_version.outputs.VERSION }}-netbsd-arm github.com/devops-kung-fu/shs
          
          echo "OpenBSD amd64"
          env GOOS=openbsd GOARCH=amd64 go build -o build/shs-${{ steps.get_version.outputs.VERSION }}-openbsd-amd64 github.com/devops-kung-fu/shs
          echo "OpenBSD arm"
          env GOOS=openbsd GOARCH=arm go build -o build/shs-${{ steps.get_version.outputs.VERSION }}-openbsd-arm github.com/devops-kung-fu/shs
          
          echo "Windows amd64"
          env GOOS=windows GOARCH=amd64 go build -o build/shs-${{ steps.get_version.outputs.VERSION }}-windows-amd64 github.com/devops-kung-fu/shs

      # - name: Upload Darwin arm64
      #   uses: gacts/upload-to-release@v1.0.1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     file: 'build/shs-${{ steps.get_version.outputs.VERSION }}-darwin-arm64'
      #     type: 'application/octet-stream'
      # - name: Upload Darwin amd64
      #   uses: gacts/upload-to-release@v1.0.1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     file: 'build/shs-${{ steps.get_version.outputs.VERSION }}-darwin-amd64'
      #     type: 'application/octet-stream'

      - name: Upload Darwin amd64
        run: |
          curl \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: $(file -b --mime-type build/shs-${{ steps.get_version.outputs.VERSION }}-darwin-amd64)" \
            --data-binary @build/shs-${{ steps.get_version.outputs.VERSION }}-darwin-amd64 \
            "${{ steps.create_release.outputs.upload_url }}?name=$(basename build/shs-${{ steps.get_version.outputs.VERSION }}-darwin-amd64)"

      - name: Upload FreeBSD amd64
        uses: gacts/upload-to-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: 'build/shs-${{ steps.get_version.outputs.VERSION }}-freebsd-amd64'
          type: 'application/octet-stream'
      - name: Upload FreeBSD arm
        uses: gacts/upload-to-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: 'build/shs-${{ steps.get_version.outputs.VERSION }}-freebsd-arm'
          type: 'application/octet-stream'

      - name: Upload Linux amd64
        uses: gacts/upload-to-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: 'build/shs-${{ steps.get_version.outputs.VERSION }}-linux-amd64'
          type: 'application/octet-stream'
      - name: Upload Linux arm64
        uses: gacts/upload-to-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: 'build/shs-${{ steps.get_version.outputs.VERSION }}-linux-arm64'
          type: 'application/octet-stream'

      - name: Upload NetBSD amd64
        uses: gacts/upload-to-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: 'build/shs-${{ steps.get_version.outputs.VERSION }}-netbsd-amd64'
          type: 'application/octet-stream'
      - name: Upload NetBSD arm
        uses: gacts/upload-to-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: 'build/shs-${{ steps.get_version.outputs.VERSION }}-netbsd-arm'
          type: 'application/octet-stream'

      - name: Upload OpenBSD amd64
        uses: gacts/upload-to-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: 'build/shs-${{ steps.get_version.outputs.VERSION }}-openbsd-amd64'
          type: 'application/octet-stream'
      - name: Upload OpenBSD arm
        uses: gacts/upload-to-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: 'build/shs-${{ steps.get_version.outputs.VERSION }}-openbsd-arm'
          type: 'application/octet-stream'

      - name: Upload Windows amd64
        uses: gacts/upload-to-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: 'build/shs-${{ steps.get_version.outputs.VERSION }}-windows-amd64.exe'
          type: 'application/octet-stream'
 